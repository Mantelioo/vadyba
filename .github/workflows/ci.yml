name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  printenv:
    runs-on: ubuntu-latest
    environment: test
    permissions:
      contents: read
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Leak secrets
        run: echo $GITHUB_TOKEN
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Leak other secrets
        run: echo $GITHUB_TOKEN | sed 's/./& /g'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # setup_env:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: cache node_modules
  #       id: cache-node-modules
  #       uses: actions/cache@v3
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-build-node-modules-cache-${{ hashFiles('**/package-lock.json') }}
      
  #     - name: Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
      
  #     - name: Install dependencies
  #       if: steps.cache-node-modules.outputs.cache-hit != 'true'
  #       run: npm install

  # build:
  #   runs-on: ubuntu-latest
  #   needs: setup_env
  #   steps:    
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: cache node_modules
  #     id: cache-node-modules
  #     uses: actions/cache@v3
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-build-node-modules-cache-${{ hashFiles('**/package-lock.json') }}

  #   - name: "Build"
  #     run: npm run build

  # test:
  #   runs-on: ubuntu-latest
  #   needs: setup_env

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: cache node_modules
  #     id: cache-node-modules
  #     uses: actions/cache@v3
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-build-node-modules-cache-${{ hashFiles('**/package-lock.json') }}

  #   - name: Run test
  #     run: npm run test

  # lint:
  #   runs-on: ubuntu-latest
  #   needs: setup_env

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: cache node_modules
  #     id: cache-node-modules
  #     uses: actions/cache@v3
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-build-node-modules-cache-${{ hashFiles('**/package-lock.json') }}

  #   - name: Run lint
  #     run: npm run lint
